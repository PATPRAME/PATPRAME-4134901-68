1. ให้นักศึกษาส่ง github link ปฏิบัติการที่ 1 ในกลุ่มไลน์ของรายวิชา โดยหัวหน้ารวบรวมเป็นไฟล์ xls (รหัสนักศึกษา, ชื่อ-สกุล, link)
คำตอบ: https://github.com/PATPRAME/PATPRAME-4134901-68


2. ให้นักศึกษาเลือกระบบ Automation/Integration Platform as a Service (iPaaS) หรือ Low-code Platform อื่นๆ มา 1 ตัว และเปรียบเทียบข้อดีข้อเสียกับ n8n โดยเน้นที่การใช้งานแบบ Local
คำตอบ: แพลตฟอร์มที่เลือกคือ Node-RED ซึ่งเป็นเครื่องมือแบบ Low-code ที่นิยมใช้งานในงานระบบอัตโนมัติ โดยเฉพาะงานที่เกี่ยวข้องกับ IoT หรือการเชื่อมโยงอุปกรณ์ผ่านโปรโตคอลต่างๆ เช่น HTTP, MQTT เป็นต้น

เมื่อเปรียบเทียบกับ n8n ซึ่งเป็น Workflow Automation Tool ที่สามารถเชื่อมต่อกับ API ต่างๆ ได้ง่ายกว่า พบว่าทั้งสองแพลตฟอร์มมีข้อดีข้อเสียต่างกัน

ข้อดีของ Node-RED คือใช้งานง่ายมาก ติดตั้งเร็ว และเหมาะกับงานพื้นฐาน เช่น การรับส่งข้อมูลจากอุปกรณ์ หรือการดึง API อย่างง่าย ไม่มีระบบการจัดการผู้ใช้งาน (user management) แต่ก็ไม่ซับซ้อน เหมาะกับผู้เริ่มต้น และผู้ที่ต้องการใช้บนเครื่อง Local อย่างรวดเร็วโดยไม่ต้องตั้งค่าอะไรมาก

ข้อดีของ n8n คือมีความสามารถสูงกว่าในด้านการควบคุม Logic ของ Workflow เช่น การทำ if/else, loop, การใช้ webhook และยังสามารถเชื่อมต่อกับบริการ SaaS ต่างๆ ได้ดี มีระบบจัดการผู้ใช้งานและการกำหนดสิทธิ์ ทำให้เหมาะกับงานที่ซับซ้อนหรือใช้ในระดับองค์กร

สรุปคือ หากต้องการระบบที่ง่าย เร็ว และเหมาะกับ IoT ควรเลือก Node-RED แต่ถ้างานที่เกี่ยวข้องกับการเชื่อม API หรือการจัดการ workflow แบบซับซ้อน ควรเลือก n8n




3. ให้นักศึกษาเปรียบเทียบการใช้งาน n8n แบบ Local และ Cloud และการติดตั้งแบบ Local แบบ node.js และ Docker เหมาะสมกับสถานะการณ์ใด
คำตอบ:n8n มีรูปแบบการใช้งานทั้งแบบ Cloud และแบบ Local โดยการใช้งานแบบ Cloud จะเหมาะกับผู้ใช้ที่ต้องการความสะดวก ไม่ต้องดูแลเซิร์ฟเวอร์หรือระบบหลังบ้านเอง เพียงแค่สมัครสมาชิกและใช้งานผ่านเว็บไซต์ได้ทันที เหมาะกับงานขนาดเล็กถึงปานกลาง หรือผู้ที่ไม่มีความเชี่ยวชาญด้านระบบ

ในทางกลับกัน การใช้งานแบบ Local จะเหมาะกับองค์กรหรือผู้ใช้งานที่ต้องการควบคุมข้อมูลทั้งหมดเอง เช่น งานที่มีข้อมูลสำคัญหรือไม่ต้องการส่งข้อมูลขึ้นคลาวด์ อีกทั้งยังไม่มีข้อจำกัดด้านจำนวน workflow หรือการตั้งค่าเฉพาะทาง ซึ่งสามารถปรับแต่งได้อย่างอิสระ

สำหรับการติดตั้งแบบ Local นั้น สามารถเลือกได้ระหว่างการติดตั้งผ่าน Node.js โดยใช้คำสั่ง npm หรือติดตั้งผ่าน Docker โดยแต่ละวิธีเหมาะกับสถานการณ์ต่างกัน

การติดตั้งผ่าน Node.js เหมาะกับนักพัฒนาที่ต้องการเข้าถึงโค้ดโดยตรง หรือใช้เพื่อการพัฒนาและทดสอบในเครื่อง local เพราะสามารถแก้ไขหรือ debug ได้ง่าย ส่วนการติดตั้งผ่าน Docker เหมาะกับการใช้งานใน production หรือ server จริง เนื่องจากมีความเสถียรสูง จัดการสภาพแวดล้อมได้ดี และสามารถ deploy ได้สะดวกกว่า

สรุปคือ หากต้องการใช้งาน n8n แบบง่ายและเร็ว เลือกแบบ Cloud แต่ถ้าต้องการควบคุมระบบเองหรือมีข้อจำกัดด้านความปลอดภัย ให้เลือกแบบ Local และหากจะติดตั้ง Local ก็ควรเลือก Docker ถ้าต้องการความเสถียร หรือ Node.js ถ้าต้องการพัฒนา/แก้ไขโค้ดเอง




4. ให้นักศึกษาอธิบายหน้าที่ของ Node แต่ละประเภทของ n8n พร้อมยกตัวอย่าง ประเภทละ 3 ตัวอย่าง
คำตอบ: -Trigger Node – เริ่มต้น workflow

Webhook: รับข้อมูลจากภายนอกผ่าน URL

Cron: ตั้งเวลาทำงานอัตโนมัติ

Email Trigger: เริ่ม workflow เมื่อมีอีเมลเข้า

-Action Node – ทำงานหลัก เช่น ส่งข้อมูล/บันทึก/ดึง API

HTTP Request: ส่ง/รับข้อมูล API

Google Sheets: เพิ่มหรืออ่านข้อมูลจาก Google Sheet

Send Email: ส่งอีเมลอัตโนมัติ

-Logic Node – จัดการเงื่อนไขและ flow

IF: เงื่อนไข if/else

Switch: แยกหลายกรณี

Merge: รวมข้อมูลหลาย flow

-Set/Transform Node – แปลงหรือปรับข้อมูล

Set: กำหนดค่าข้อมูลใหม่

Function: เขียน JavaScript เอง

Move Binary Data: จัดการไฟล์ (binary)




5. ให้นักศึกษายกตัวอย่างการใช้งาน n8n จริง (พร้อมอ้างอิงแหล่ง/ที่มา) มา 3 กรณี พร้อมอธิบายว่า n8n ช่วยแก้ปัญหาใดในแต่ละกรณี
คำตอบ: -การเชื่อม Shopify กับ Google Sheets

ที่มา https://n8n.io/workflows/850

ใช้ n8n ดึงคำสั่งซื้อจาก Shopify แล้วบันทึกลง Google Sheets อัตโนมัติ

ปัญหาที่แก้: ลดเวลาทำงานมือและข้อผิดพลาด

-การแจ้งเตือนอีเมลเมื่อมี issue ใหม่ใน GitHub

ที่มา https://n8n.io/workflows/850

n8n รับ webhook จาก GitHub แล้วส่งอีเมลหา dev team

ปัญหาที่แก้: แจ้งเตือนเร็ว ไม่ต้องเช็ค GitHub ตลอด

-ระบบแจ้งเตือนการเปลี่ยนแปลงราคาคริปโต

ที่มา https://n8n.io/workflows/949

ดึงข้อมูลจาก API ของ CoinGecko แล้วส่งแจ้งเตือนทาง Telegram

ปัญหาที่แก้: ติดตามราคาทันทีโดยไม่ต้องเปิดเว็บ
